# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from UsersService import users_service_pb2 as UsersService_dot_users__service__pb2


class UsersAPIStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsExist = channel.unary_unary(
                '/UsersAPI/IsExist',
                request_serializer=UsersService_dot_users__service__pb2.User.SerializeToString,
                response_deserializer=UsersService_dot_users__service__pb2.Response.FromString,
                )
        self.Create = channel.unary_unary(
                '/UsersAPI/Create',
                request_serializer=UsersService_dot_users__service__pb2.User.SerializeToString,
                response_deserializer=UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
                )
        self.Verify = channel.unary_unary(
                '/UsersAPI/Verify',
                request_serializer=UsersService_dot_users__service__pb2.User.SerializeToString,
                response_deserializer=UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
                )
        self.Info = channel.unary_unary(
                '/UsersAPI/Info',
                request_serializer=UsersService_dot_users__service__pb2.User.SerializeToString,
                response_deserializer=UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
                )


class UsersAPIServicer(object):
    """Missing associated documentation comment in .proto file"""

    def IsExist(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsExist': grpc.unary_unary_rpc_method_handler(
                    servicer.IsExist,
                    request_deserializer=UsersService_dot_users__service__pb2.User.FromString,
                    response_serializer=UsersService_dot_users__service__pb2.Response.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=UsersService_dot_users__service__pb2.User.FromString,
                    response_serializer=UsersService_dot_users__service__pb2.ResponseWithUser.SerializeToString,
            ),
            'Verify': grpc.unary_unary_rpc_method_handler(
                    servicer.Verify,
                    request_deserializer=UsersService_dot_users__service__pb2.User.FromString,
                    response_serializer=UsersService_dot_users__service__pb2.ResponseWithUser.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=UsersService_dot_users__service__pb2.User.FromString,
                    response_serializer=UsersService_dot_users__service__pb2.ResponseWithUser.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UsersAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UsersAPI(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def IsExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UsersAPI/IsExist',
            UsersService_dot_users__service__pb2.User.SerializeToString,
            UsersService_dot_users__service__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UsersAPI/Create',
            UsersService_dot_users__service__pb2.User.SerializeToString,
            UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UsersAPI/Verify',
            UsersService_dot_users__service__pb2.User.SerializeToString,
            UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UsersAPI/Info',
            UsersService_dot_users__service__pb2.User.SerializeToString,
            UsersService_dot_users__service__pb2.ResponseWithUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
